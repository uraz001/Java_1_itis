public class ControlWorkReWriting {
    /**
     * Студент %surname% %initials%
     * Группа %group%
     * Высшая школа информационных технологий и систем
     * Казанский (Приволжский) федеральный университет
     *
     * Контрольная работа №3.
     *
     * Максимальный балл 10.
     * Итого:
     */
    public static void main(String[] args) {

    }

    /**
     * 1. Проверить является ли строка палиндромом.
     * Проверка:
     *  метод:
     *  тест:
     * Итого (макс. 2 балла):
     */
    boolean isPalindrome() {
        return false;
    }

    /**
     * 2. Дана строка, сложить все числа в ней. Если чисел нет выводим 0. Протестировать.
     *
     * Проверка:
     *  метод:
     *  тест:
     * Итого (макс. 2 балла):
     */
    Number fromTextSum(){
        return 0;
    }


    /**
     * 3. Написать метод генерирующий сложный пароль (цифры, символы и латинский алфавит).
     *
     * Проверка:
     *  метод:
     *  тест:
     * Итого (макс. 2 балла):
     */
    String generatePassword() {
        return null;
    }

    /**
     * 4. Написать метод, который сравнивает две строки и выводит 0 если они равны, 1 если лексиграфически
     * первая находится раньше второй, -1 в обратном случае.
     * Проверка:
     *  метод:
     *  тест:
     * Итого (макс. 2 балла):
     */
    int compareStrings(String str1, String str2) {
        return 0;
    }

    /**
     * 5. Описать рекурсивную функцию NOD(A, B) целого типа, находящую
     * наибольший общий делитель (НОД) двух целых положительных чисел A
     * и B, используя алгоритм Евклида:
     * НОД(A, B) = НОД(B, A mod B), если B != 0; НОД(A, 0) = A.
     * С помощью этой функции найти НОД(A, B), НОД(A, C), НОД(A,D), если
     * даны числа A, B, C, D.
     *
     * Проверка:
     *  метод:
     *  тест:
     * Итого (макс. 2 балла):
     */

    int getGCD (int a, int b) {
        return 0;
    }
}